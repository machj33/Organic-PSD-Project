Individual Scan Checklist:

1. Turn on the  laser
2. Turn on the current measurement device
3. Turn on the ground source
4. Determine the active area to measure
5. Align the device
6. Rename the data
7. Collect data
8. Check the data


Here are more in depth instructions for each step. If you need to set up the scans for a new laptop or
controller, there are more steps further below.


1. Turn on the  laser

Find the green LED laser and turn it on using the power source. The voltage should be set to 3 V. Let this laser
reach thermal equilibrium by leaving it on for 15 minutes. While it is not in use, cover the light so it isn't
sitting on one point of the device.

2. Turn on the current measurement device

Currently, the measurement device is now the Agilent 4155C, but there were ideas of switching to a Keithley
measurement source to reduce the variance of leakage current. If you are using the 4155C and reading 4 currents
at a time, connect each wire to one current port. If you are reading 1 current at a time, then connect the 3 
remaining contacts to ground. If there are more than 4 contacts, then connect all remaining connections to
ground as well.

3. Turn on the ground source

This current set up uses a Keithley source to better control the ground source. In other set ups, the 4155C
was the ground source.

4. Determine the active area to measure

Figure out the area and scan size. A lot of the data currently collected uses a 34 x 34 scan over a 33 x 33
area. I have run a "dense" scan of 67 x 67 points (0.5 mm steps, 2 per mm, plus 1 for the 0th measurement),
which took about 4 hours instead of 1. In any case, it is probably important to maintain the same area for
each scan used in analysis and training. Each data set is standardized, so the maximum current value read at
the outside will be scanned. Most likely, a scan at the edge of the device will have a higher current reading
than one 3 mm in.

Change the variables in SnakeCollectData.py so that xPoints and yPoints is set to the number of scan spots
(i.e. 34 or 67), and xLength and yLength to the useable area of the device (i.e. 33 mm). Sometimes, I do a 
test scan that is only 6 x 6 points, as a sanity check. This would be across a 35 x 35 mm area to ensure that
each step is exactly 5 mm. The minimum step size of the g-code motor is 0.1 mm, so ensure that the step
size is a multiple of 0.1 to keep spacing consistent.

5. Align the device

Ensure that the bottom of the sample holder is flush with the g-code motor. Using the orange glasses and
Candle.exe, align the laser to the top left corner of the device. I find the best way to do this is make sure
the laser is half on the left edge, then align it so the laser is half on the top edge. Once the laser is in
the corner, move the device up and to the left (moving the laser down and to the right, on the device) by 3.5
mm, which was calculated from (40 - 33)/2. This removed the a border of 3.5 mm on each side of the device.

6. Rename the data

At the bottom of the program, there will be fields to change the name of the files saved, one for the current
measurements and one for the dark current measurements. I would suggest using the name of the device, date, and
configuration in the name.

7. Collect data

Turn off the lights and cover the laser again. Start the SnakeCollectData.py program to being data collection.
The first step will be a dark current reading. The output will prompt you to hit "Turn on the laser", or just
uncover the laser, and hit enter to being the actual scan. Once the scan starts, you can start a timer for about
1 hour. Leave the room and return in an hour to check if the scan is finished. It will finish 5 mm to the right
of the initial starting location, so the laser does not sit on the same spot of the device.

8. Check the data

Currently the data will be output as a .npy file that you renamed in step 6. Use the ViewData.py program to view
the latest data. Change the file that is opened at the top of the file, and it should give you a quick 
visualization of what your data looks like. If the scan looks good, you can copy and paste both saved files into
the Data/ folder.


If you are starting the project on a new laptop/controller, here are the start-up steps.


1. Cloning the repository

If you already use Git and/or know how to, feel free to use whichever method you prefer. I personally use Git bash.
Install it from this link: https://git-scm.com/downloads. Once open, use "ls" to show the current directory, and 
"cd (FOLDER_NAME)" to change to that folder. "cd .." goes up one folder, and you can also put the full path of the
folder you want. Navigate to the folder you want to work in.

On the GitHub page, click the green "Code" button and copy the HTTPS link. In bash, type "git clone (LINK)". You
should now have all the files in this folder. 

Other Git basics:
git pull - Gets all the changes from the online repository. Only do this if you are okay with losing all work on
your current machine. Otherwise, use a combination of git fetch and git merge.
git add - Adds changed files to the "stage". Used in conjunction with git commit.
git commit - "Saves" the list of files on the "stage". Use -m to add a message or name to the commit.
git push origin main - Pushes the commit from your local repository to the online (origin) main branch (main).
* Use add, commit, and push to save your changes to the online repository *

2. Installing Python

Go to https://www.python.org/downloads/release/python-3122/ and download the latest version of Python.
Then, you need to add Python to your path. In the Windows search bar, type "path" and select the
"Edit system environment variables". Press the "Environment variables" in the bottom right. Under your
user variables, select "Path" and press the "Edit" button. This will bring up a table of lines, of which
you need to add two "New" lines. Find your install location for Python (e.g. "C:\Users\Winnie\AppData\
Local\Programs\Python\Python311") and copy it into one of the lines for "Path". For the second line,
paste in the same location and add "\Scripts".

Alternatively, if Python is already installed, use CMD to type "python --version". This code was run
and tested using Python 3.11.1

3. Install packages

The data collection script uses PyMeasure, PyVisa, and NumPy, while the data viewing script uses MatPlotLib and Seaborn.
Use "pip install ---" to install each of pymeasure, matplotlib, and seaborn. PyVisa and Numpy should install with PyMeasure.
You can use "pip list" to ensure each are installed.

Package            Version
------------------ ----------
matplotlib         3.7.0
numpy              1.24.2
PyMeasure          0.13.1
PyVISA             1.14.1
seaborn            0.13.2

4. Install Candle

Go to https://docs.sainsmart.com/article/7c20d7zaw3-how-to-install-candle-grblcontrol-for-windows and follow step 2 for
Software "Installation". This is the only step that I followed to get Candle working with the G-Code motors. However, if
you have any issues, try following instructions 1-3.

Once you have Candle open, try connecting the USB from the setup and jogging the motors to make sure everything is working.
Since we only have the X and Z motors, only the left/right and gray up/down arrows will actually move anything. In settings,
note which port you are connected to (e.g. COMX).

5. Install Keysight Connection Expert

Go to https://www.keysight.com/us/en/lib/software-detail/computer-software/io-libraries-suite-downloads-2175637.html and 
install the Keysight Instrument Control Bundle. This is what I personally used to install the Keysight Connection Expert,
but the bundle also includes BenchVue and other programs which should not be necessary. Open the .exe file, and download
the IO Connections Suite. This will allow you to open "Keysight Connection Expert". This is different from the "Keysight
Secure Instrument Communication Expert".

This program will be used to ensure your connection to the Semiconductor Parameter Analyzer (Agilent 4155C). Plug the
GPIB-USB cable into your computer and open the program. Under "My Instruments" > "GPIB-USB", there should be a green box
with an instrument labeled "4155C, Hewlett-Packard". Note the label under this name, which should look like 
"GPIB-::X::INSTR".

Theoretically, it may be possible to skip this step if you assume that the instrument is listed as "GPIB0::2::INSTR", 
which it has for two computers. Maybe if you are following this guide, skip this step and see if this is necessary.

6. Edit information in the data collection file

In the data collection file, currently named "SnakeCollectData.py", set the variable GRBL_port_path to the port from
Candle. Then, in the smu variable declaration, change "Agilent4156('GPIB0::X::INSTR...') to the label from Keysight
Connection Expert. Additionally, you may need to change some of the file paths, such as for the configuration file
"simple_read.json".

7. Set up the testing apparatus

Place your PSD sample into the sample holder. Ensure the brass pins have a good connection to the ITO glass. There
should be four SMU cables from the SPA, each which split into red and black alligator clip heads. Attach the red 
alligator clips to the wires from the contacts. Attach all black alligator clips to the ground wire on the back
of the device and the ground from the VSU. 

Set up a laser, a lens to focus the laser, and an aperature in front of the device. The lens should focus the laser
to be as fine as possible on the photodetecting surface. The aperature will prevent reflected light from illuminating
other parts of the PSD.

8. Use Candle to align the device.

With the laser on, use the controls in Candle to move the laser to the bottom left corner of the device. Close out 
of the Candle program and turn off the lights. Start the data collection program. The data will be saved in a 
numpy array that can be loaded into other files.

9. Install DAQmx

There is an error running the script as is, and it is that Python cannot find nicaiu.dll. This seems to be a library
used in LabVIEW, so if you have previously installed LabVIEW, you should be good to skip this step. Otherwise, go to
https://www.ni.com/en/support/downloads/drivers/download.ni-daq-mx.html#521556 and download the latest version of 
DAQmx. You will need to reboot after you are finished.